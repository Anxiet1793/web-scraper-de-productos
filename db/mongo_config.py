# db/mongo_config.py

from pymongo import MongoClient
from pymongo.errors import ConnectionFailure

# URI directa (reemplaza con tu propia URI si es distinta)
MONGO_URI = "mongodb+srv://gamys1793:GAMYS1793samuel@healthmobile.btbsqlw.mongodb.net/?retryWrites=true&w=majority&appName=HealthMobile"
DB_NAME = "MercadoLibre"  # Nombre de la base de datos

client = None
db = None

def connect_to_mongodb():
    """
    Establece la conexi√≥n con MongoDB Atlas.
    Retorna el objeto de la base de datos si la conexi√≥n es exitosa, None en caso contrario.
    """
    global client, db
    if client is not None and db is not None:
        print("Ya conectado a MongoDB.")
        return db

    try:
        client = MongoClient(MONGO_URI)
        # Comando ping para verificar la conexi√≥n
        client.admin.command('ping')
        db = client[DB_NAME]
        print(f"‚úÖ Conexi√≥n exitosa a MongoDB Atlas. Base de datos: {DB_NAME}")
        return db
    except ConnectionFailure as e:
        print(f"‚ùå Error de conexi√≥n a MongoDB Atlas: {e}")
        return None
    except Exception as e:
        print(f"‚ö†Ô∏è Ocurri√≥ un error inesperado al conectar a MongoDB: {e}")
        return None

def close_mongodb_connection():
    """Cierra la conexi√≥n con MongoDB."""
    global client, db
    if client is not None:
        client.close()
        print("üîí Conexi√≥n a MongoDB cerrada.")
        client = None
        db = None

# Prueba directa si se ejecuta este archivo
if __name__ == "__main__":
    database = connect_to_mongodb()
    if database is not None:
        print(f"üìÇ Colecciones disponibles: {database.list_collection_names()}")
    close_mongodb_connection()
